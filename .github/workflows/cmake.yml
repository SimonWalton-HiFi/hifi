name: CMake CI

on: [pull_request]

env:
  CI_BUILD: Github
  AWS_ACCESS_KEY_ID: AKIAJOF5R5WQWQL6C7UQ

  # Force the mac build to use 11.1 (required for vcpkg)
  DEVELOPER_DIR: /Applications/Xcode_11.2.app/Contents/Developer
  MACOSX_DEPLOYMENT_TARGET: '10.11'

  BUILD_TYPE: Release
  RELEASE_TYPE: PR
  RELEASE_NUMBER: ${{ github.event.number }}
  VERSION_CODE: ${{ github.event.number }}
  GIT_PR_COMMIT: ${{ github.sha }}
  # FIXME should be a shortened version of the SHA
  GIT_PR_COMMIT_SHORT: ${{ github.sha }}

  HIFI_VCPKG_BOOTSTRAP: true
  BS_USERNAME: gustavo@highfidelity.io
  BS_PASSWORD: ${MASKED_BUGSPLAT_PASSWORD}
  CMAKE_BACKTRACE_URL: https://highfidelity.sp.backtrace.io:6098
  GA_TRACKING_ID: UA-39558647-8
  PreferredToolArchitecture: X64
  OCULUS_APP_ID: '1255907384473836'
  # CMAKE_BACKTRACE_TOKEN: ${MASKED_CMAKE_BACKTRACE_TOKEN}
  # CMAKE_BACKTRACE_SYMBOLS_TOKEN: ${MASKED_BACKTRACE_UPLOAD_TOKEN}

# Mac OS
#PLATFORM_CMAKE_GENERATOR=Xcode
#PLATFORM_BUILD_ARGUMENTS=--config Release --target package
#ARTIFACT_EXPRESSION=build/*.dmg,build/*.zip

# Windows 
#PLATFORM_CMAKE_GENERATOR=Visual Studio 15 2017 Win64
#PLATFORM_BUILD_ARGUMENTS=--target package --config release
#ARTIFACT_EXPRESSION=build/*.exe,build/*.zip,*-symbols.zip

# Ubuntu 
#PLATFORM_CMAKE_GENERATOR=Unix Makefiles
#PLATFORM_BUILD_ARGUMENTS=--target all -- -j4
#ARTIFACT_EXPRESSION=build/assignment-client/**,build/domain-server/**,build/ice-server/ice-server,build/tools/ice-client/ice-client,build/tools/ac-client/ac-client,build/tools/oven,build/ext/makefiles/nvtt/project/lib/**,build/ext/makefiles/quazip/project/lib/**

# Android
#OAUTH_CLIENT_SECRET=${MASKED_ANDROID_OAUTH_CLIENT_SECRET_NIGHTLY}
#OAUTH_CLIENT_ID=6c7d2349c0614640150db37457a1f75dce98a28ffe8f14d47f6cfae4de5b262a
#OAUTH_REDIRECT_URI=https://dev-android-interface.highfidelity.com/auth
#ARTIFACT_EXPRESSION=android/*.apk
#SHA7=${GIT_PR_COMMIT_SHORT}
#ANDROID_APK_NAME=HighFidelity-Beta-PR${RELEASE_NUMBER}-${GIT_PR_COMMIT_SHORT}.apk
#ANDROID_BUILT_APK_NAME=interface-debug.apk	
#ANDROID_APP=interface
#ANDROID_BUILD_DIR=debug
#ANDROID_BUILD_TARGET=assembleDebug
#STABLE_BUILD=0

jobs:
  build_client_mac:
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v1
      with: 
        submodules: true
        fetch-depth: 1
    - name: Install awscli
      run: pip install awscli
    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build
    - name: Configure CMake
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCLIENT_ONLY:BOOLEAN=TRUE -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl -G Xcode -DVCPKG_APPLOCAL_DEPS=OFF
    - name: Build Console
      working-directory: ${{runner.workspace}}/build
      run: cmake --build . --config $BUILD_TYPE --target packaged-server-console
    - name: Build Interface
      working-directory: ${{runner.workspace}}/build
      run: cmake --build . --config $BUILD_TYPE --target interface
    - name: Build Installer
      working-directory: ${{runner.workspace}}/build
      run: cmake --build . --config $BUILD_TYPE --target package
    - name: Upload artifact
      working-directory: ${{runner.workspace}}/build
      env:
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
        ARTIFACT_NAME: HighFidelity-Beta-Interface-PR${{ github.event.number }}-${{ github.sha }}.dmg
      run: aws s3 cp $ARTIFACT_NAME s3://hifi-public/austin/builds/$ARTIFACT_NAME

  build_full_mac:
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@v1
      with: 
        submodules: true
        fetch-depth: 1
    - name: Install awscli
      run: pip install awscli
    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build
    - name: Configure CMake
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl -G Xcode -DVCPKG_APPLOCAL_DEPS=OFF
    - name: Build Console
      working-directory: ${{runner.workspace}}/build
      run: cmake --build . --config $BUILD_TYPE --target packaged-server-console
    - name: Build Interface
      working-directory: ${{runner.workspace}}/build
      run: cmake --build . --config $BUILD_TYPE --target interface
    - name: Build Installer
      working-directory: ${{runner.workspace}}/build
      run: cmake --build . --config $BUILD_TYPE --target package
    - name: Upload artifact
      working-directory: ${{runner.workspace}}/build
      env:
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
        ARTIFACT_NAME: HighFidelity-Beta-PR${{ github.event.number }}-${{ github.sha }}.dmg
      run: aws s3 cp $ARTIFACT_NAME s3://hifi-public/austin/builds/$ARTIFACT_NAME

  build_client_win32:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v1
      with: 
        submodules: true
        fetch-depth: 1
    - name: Install awscli
      run: pip install awscli
    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build
    - name: Configure CMake (Windows)
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCLIENT_ONLY:BOOLEAN=TRUE -A x64 
    - name: Build Console
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake --build . --config $BUILD_TYPE --target packaged-server-console
    - name: Build Interface
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake --build . --config $BUILD_TYPE --target interface
    - name: Build Installer
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake --build . --config $BUILD_TYPE --target package
    - name: Build Installer
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: ls -la
    - name: Upload artifact
      shell: bash
      working-directory: ${{runner.workspace}}/build
      env:
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
        ARTIFACT_NAME: HighFidelity-Beta-Interface-PR${{ github.event.number }}-${{ github.sha }}.exe
      run: aws s3 cp $ARTIFACT_NAME s3://hifi-public/austin/builds/$ARTIFACT_NAME
          
  build_full_win32:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v1
      with: 
        submodules: true
        fetch-depth: 1
    - name: Install awscli
      run: pip install awscli
    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build
    - name: Configure CMake (Windows)
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -A x64 
    - name: Build Console
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake --build . --config $BUILD_TYPE --target packaged-server-console
    - name: Build Interface
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake --build . --config $BUILD_TYPE --target interface
    - name: Build Installer
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake --build . --config $BUILD_TYPE --target package
    - name: Upload artifact
      shell: bash
      working-directory: ${{runner.workspace}}/build
      env:
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
        ARTIFACT_NAME: HighFidelity-Beta-PR${{ github.event.number }}-${{ github.sha }}.exe
      run: aws s3 cp $ARTIFACT_NAME s3://hifi-public/austin/builds/$ARTIFACT_NAME
